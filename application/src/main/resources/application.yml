# Device communication protocol parameters
http:
  request_timeout: 60000
# MQTT server parameters
mqtt:
  # Enable/disable mqtt transport protocol.
  enabled: true
  bind_address: 0.0.0.0
  bind_port: 1883
  adaptor: JsonMqttAdaptor
  timeout: 10000
  netty:
    leak_detector_level: DISABLED
    boss_group_thread_count: 1
    worker_group_thread_count: 8
    max_payload_size: 65536
  ssl:
    # Enable/disable SSL support
    enabled: false
    # SSL protocol: See http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext
    protocol: TLSv1.2
    # Path to the key store that holds the SSL certificate
    key_store: mqttserver.jks
    # Password used to access the key
    key_store_password: server_ks_password
    # Password used to access the key
    key_password: server_key_password
    # Type of the key store
    key_store_type: JKS

# CoAP server parameters
coap:
  # Enable/disable coap transport protocol.
  enabled: true
  bind_address: 0.0.0.0
  bind_port: 5683
  adaptor: JsonCoapAdaptor
  timeout: 10000


database:
  type: sql # sql OR mongodb

sql:
  # Specify executor service type used to perform timeseries insert tasks: SINGLE FIXED CACHED
  ts_inserts_executor_type: "${SQL_TS_INSERTS_EXECUTOR_TYPE:fixed}"
  # Specify thread pool size for FIXED executor service type
  ts_inserts_fixed_thread_pool_size: "${SQL_TS_INSERTS_FIXED_THREAD_POOL_SIZE:10}"

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: jamesmsw
  jpa:
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false


quota:
  host:
    # Max allowed number of API requests in interval for single host
    limit: "${QUOTA_HOST_LIMIT:10000}"
    # Interval duration
    intervalMs: "${QUOTA_HOST_INTERVAL_MS:60000}"
    # Maximum silence duration for host after which Host removed from QuotaService. Must be bigger than intervalMs
    ttlMs: "${QUOTA_HOST_TTL_MS:60000}"
    # Interval for scheduled task that cleans expired records. TTL is used for expiring
    cleanPeriodMs: "${QUOTA_HOST_CLEAN_PERIOD_MS:300000}"
    # Enable Host API Limits
    enabled: "${QUOTA_HOST_ENABLED:false}"
    # Array of whitelist hosts
    whitelist: "${QUOTA_HOST_WHITELIST:localhost,127.0.0.1}"
    # Array of blacklist hosts
    blacklist: "${QUOTA_HOST_BLACKLIST:}"
    log:
      topSize: 10
      intervalMin: 2
  rule:
    tenant:
      # Max allowed number of API requests in interval for single tenant
      limit: "${QUOTA_TENANT_LIMIT:100000}"
      # Interval duration
      intervalMs: "${QUOTA_TENANT_INTERVAL_MS:60000}"
      # Maximum silence duration for tenant after which Tenant removed from QuotaService. Must be bigger than intervalMs
      ttlMs: "${QUOTA_TENANT_TTL_MS:60000}"
      # Interval for scheduled task that cleans expired records. TTL is used for expiring
      cleanPeriodMs: "${QUOTA_TENANT_CLEAN_PERIOD_MS:300000}"
      # Enable Host API Limits
      enabled: "${QUOTA_TENANT_ENABLED:false}"
      # Array of whitelist tenants
      whitelist: "${QUOTA_TENANT_WHITELIST:}"
      # Array of blacklist tenants
      blacklist: "${QUOTA_HOST_BLACKLIST:}"
      log:
        topSize: 10
        intervalMin: 268